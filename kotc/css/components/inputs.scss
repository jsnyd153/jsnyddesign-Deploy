@use "sass:color";
@use "../abstracts" as *;

form {
	display: flex;
	flex-direction: column;
	padding: 1rem;
	--background_color: #{$white};
	background-color: var(--background_color);
	gap: 1rem;

	--input_size: #{14/16 * 1rem};
	--input_space-v: 1rem;
	--input_space-h: 1rem;
}

@mixin input_style() {
}

.text_input-- {
	&container {
		position: relative;
		margin-top: 3/16 * 1rem;
		display: flex;
	}
	&label {
		position: absolute;
		left: var(--input_space-h);
		font-family: $sans_font;
		font-weight: 300;
		background-color: var(--background_color);
		letter-spacing: -0.01em;
		padding: 0 0.25rem;
		margin: 0 -0.25rem;
		transition: 0.3s all;
		//transition properties
		//Default state is label over placeholder area
		transform: translate(0, 0);
		top: var(--input_space-v);
		font-size: var(--input_size);
		color: $grey-200;

		//When focused, or the placeholder is not visible (filled)
		input:focus + &,
		input:not(:placeholder-shown) + & {
			transform: translate(0, -50%);
			top: 0;
			font-size: 0.5rem;
			color: $grey-700;
		}
		input:focus + & {
			color: $blue-500;
		}
	}

	&input {
		font-family: $sans_font;
		padding: 1rem 1rem;
		border-radius: 0.25rem;
		border: 1px solid currentColor;
		background-color: transparent;
		background-color: var(--background_color);
		font-size: var(--input_size);
		height: var(--input_size);
		line-height: 100%;
		letter-spacing: -0.01em;
		color: $grey-500;
		flex-grow: 1;
		font-weight: 300;

		&:focus {
			outline: 0;
			color: $blue-500;
		}
	}

	&supporting_text {
		display: none;
	}
}

// Radio input
.radio_input {
	&.input_group {
		display: flex;
		flex-direction: column;
		gap: 1rem;
	}
	&-- {
		//label functions as the container for radio so the entire object is clickable
		&label {
			display: flex;
			gap: 0.5rem;
			align-items: center;
			position: relative;
		} //label
		&input {
			display: none;
		} //input
		&icon {
			color: $grey-400;
			width: 20/16 * 1rem;
			height: 20/16 * 1rem;
			border-radius: 50%;
			border: 3/32 * 1em solid currentColor;
			font-size: 20/16 * 1rem;
			@include f-center;
			svg {
				fill: none;
				// padding: 1/5 * 1em;
				width: 75%;
				* {
					fill: none;
					stroke: currentColor;
					stroke-width: 3/32 * 1em;
					display: none;
				}
			}
			input:checked ~ & {
				color: $blue-500;
				.check {
					display: initial;
				}
				.emphasis & {
					color: $white;
					background-color: $blue-500;
					border-color: $blue-500;
				}
				.icon-inner.emphasis & {
					color: $blue-500;
					background-color: $white;
					border-color: $white;
				}
			}
			.add_new & {
				color: $grey-200;
				.plus {
					display: initial;
				}
			}
			.icon-inner & {
				position: absolute;
				left: 1rem;
				height: 14/16 * 1rem;
				width: 14/16 * 1rem;
				border-width: 1/16 * 1rem;
				svg {
					// padding: 0 0.125rem;
					path {
						stroke-width: 2;
					}
				}
			}
		} // icon

		&name {
			text-align: center;
			font-family: $sans_font;
			padding: 1rem 1rem;
			border-radius: 0.25rem;
			border: 1px solid currentColor;
			background-color: transparent;
			background-color: var(--background_color);
			font-size: var(--input_size);
			height: var(--input_size);
			line-height: 100%;
			letter-spacing: -0.01em;
			color: $grey-500;
			flex-grow: 1;
			font-weight: 300;

			input:checked ~ & {
				border-color: $blue-500;
				background-color: $grey-50;
				color: $blue-500;

				.emphasis & {
					border-color: $blue-300;
					background-color: $blue-500;
					color: $white;
				}
			}
			.add_new & {
				color: $grey-200;
				border-color: $grey-200;
			}
			.icon-inner & {
				p {
					margin-left: 1.5rem;
				}
			}
		} //name

		&icon + &name {
			text-align: left;
		}
	}
}

.range_input {
	--thumb_size: 1.75rem;

	&-- {
		&container {
			position: relative;
			//fill space of the number display
			border-top: 1.5rem solid transparent;
			margin: calc(var(--thumb_size) / 2);
		}

		&input {
			width: 100%;
			position: absolute;
			top: 50%;
			z-index: 3;
			transform: translateY(-50%);
			-webkit-appearance: none;
			appearance: none;
			width: 100%;
			height: 4px;
			opacity: 0;
			margin: 0;
		}

		&input::-webkit-slider-thumb,
		&input::-moz-range-thumb {
			-webkit-appearance: none;
			appearance: none;
			width: var(--thumb_size);
			height: var(--thumb_size);
			cursor: pointer;
			border-radius: 50%;
			opacity: 0;
		}

		// &input::-moz-range-thumb {
		// 	width: var(--thumb_size);
		// 	height: var(--thumb_size);
		// 	cursor: pointer;
		// 	border-radius: 50%;
		// 	opacity: 0;
		// }

		&thumb {
			width: var(--thumb_size);
			height: var(--thumb_size);
			// border: 0.6vmin solid #303030;
			border-radius: 50%;
			position: absolute;
			left: 0;
			// left: calc();
			top: 50%;
			transform: translate(-50%, -50%);
			background-color: $blue-500;
			display: flex;
			justify-content: center;
			align-items: center;
			// font-weight: 700;
			// font-size: 4vmin;
			// color: #303030;
			z-index: 2;
			// left: calc(var(--percent_value) * 100%);

			span {
				display: block;
				position: absolute;
				bottom: 100%;
				left: 50%;
				transform: translate(-50%, -0.5rem);
				font-family: $sans_font;
				font-size: 14/16 * 1rem;
				line-height: 100%;
				letter-spacing: -0.01em;
				color: $grey-500;
			}
		}

		&track {
			height: 0.25rem;
			width: 100%;
			border-radius: 0.25rem;
			background-color: $blue-300;
			top: 50%;
			transform: translateY(-50%);
			left: 0;
			position: absolute;
			z-index: 1;
		}

		&line {
			// position: absolute;
			// height: 0.5vmin;
			// width: 0;
			// background-color: #303030;
		}
	}
}
