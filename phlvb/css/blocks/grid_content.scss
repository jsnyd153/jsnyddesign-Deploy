@use "sass:color";
@use "../abstracts" as *;

// Grid Content
// Visual:
// Dependancy: text_area, media_area

.grid_content {
	&-- {
		&section {
			padding: var(--gap) 0;
		}
		&grid_area {
			//NEED TO DECIDE ON FUNCTIONALITY
			grid-column: 2/-2;
			display: grid;
			gap: var(--gap);
			--items_per_row: 3;
			grid-template-columns: repeat(var(--items_per_row), minmax(0, 1fr));

			&.arrange-min {
				//set min width for card before stacking
				// Holy Albatross
				//https://blog.logrocket.com/flexible-layouts-without-media-queries/
				--min-card-width: 15rem;
				--preferred-value: (
						(var(--min-card-width) * var(--items_per_row) - var(--gap) * 2) -
							100%
					) * 999;
				grid-template-columns: repeat(
					auto-fit,
					minmax(min(var(--preferred-value), 100%), 1fr)
				);
			}
		}

		&flex_area {
			grid-column: 2/-2;
			display: flex;
			gap: var(--gap);
			flex-wrap: wrap;
			justify-content: stretch;

			> * {
				flex: 1 0 0;
				box-sizing: border-box;
				min-width: 15rem;
			}

			// set dynamic widths based on items per row
			//all items equal width, when it breaks to next line, aligns center
			&.set-ipr {
				--items_per_row: 3;
				align-items: stretch;
				justify-content: center;

				> * {
					min-width: auto;
					flex: 0 1 auto;
					--distributed_gap: calc(
						var(--gap) * (var(--items_per_row) - 1) / var(--items_per_row)
					);
					width: calc(100% / var(--items_per_row) - var(--distributed_gap));
				}
			}
		}
	}
}

//Need set up actual container queries
.grid_content--flex_area {
	container-type: inline-size;
}

@container (max-width: 900px) {
	.icon_card {
		padding: 2rem 1.5rem;
	}
}
@container (max-width: 600px) {
	.icon_card {
		padding: 2rem 1.5rem;
	}
}

@container (max-width: 400px) {
	.icon_card {
		padding: 2rem 1.5rem;
	}
}
@container (max-width: 700px) {
	.icon_card--header {
		flex-direction: column;
		align-items: flex-start;
	}
}

@container (max-width: 500px) {
	.icon_card--header {
		flex-direction: row;
		align-items: center;
	}
}
