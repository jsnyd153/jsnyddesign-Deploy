@use '../abstracts' as *;


// ================================================
// basic--column : standard 2 columns
// ================================================

.columns--basic{
	grid-gap: var(--gap);
	padding-top: var(--gap);
	padding-bottom: var(--gap);


	.image_area{
		.content{
			position: relative;
			overflow: hidden;
		}
	}//image_area



	>.grid_area.block{

		//width by default is 12 columns of the main grid
		//can be adjusted with utility classes
		display: grid;
		grid-gap: var(--gap);
		//single column on small devices
		grid-template-columns: 1fr;

		>.content{
			display: contents;
		}


		//switches to 2 column layout on screens larger than $md
		@include md() {
			//default behavior is 50/50 split (6:6 ratio)
			grid-template-columns: 6fr 6fr;


		//set custom ratio, base 12 column grid [ratio-#-#]
		@for $i from 3 through 9 {
			$remainder: 12 - $i;
			&.ratio-#{$i}-#{$remainder} {
				grid-template-columns: #{$i}fr #{$remainder}fr;
			}
		}//for

		}//md media query

		//set element to ignore the 2 column layout and span full width
		.full_width{
			grid-column: 1/-1;
		}




		//set alternate ratio, base 10 at media queries with 10 columns [ratio-#-#]
		//each class only applies when used in tandem with a col-xx-10 class
		&.col-md-10{
			@for $i from 3 through 7 {
				$remainder: 10 - $i;
				&.ratio-#{$i}-#{$remainder} {
					@include md() {
						grid-template-columns: #{$i}fr  #{$remainder}fr;
					}
				}
			}//for
		}

		&.col-lg-10{
			@for $i from 3 through 7 {
				$remainder: 10 - $i;
				&.ratio-#{$i}-#{$remainder} {
					@include lg() {
						grid-template-columns: #{$i}fr  #{$remainder}fr;
					}
				}
			}//for
		}
		&.col-xl-10{
			@for $i from 3 through 7 {
				$remainder: 10 - $i;
				&.ratio-#{$i}-#{$remainder} {
					@include xl() {
						grid-template-columns: #{$i}fr  #{$remainder}fr;
					}
				}
			}//for 
		}
	}


}//column_layout
